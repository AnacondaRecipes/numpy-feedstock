{% set name = "numpy" %}
{% set version = "1.14.2" %}
# {% set sha256 = "facc6f925c3099ac01a1f03758100772560a0b020fb9d70f210404be08006bcb" %}

package:
  name: numpy_and_dev
  version: {{ version }}

source:
  # Releases contain stale files (mtrand.c for example), see:
  # https://github.com/numpy/numpy/issues/9391
  # url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.zip
  # sha256: {{ sha256 }}
  # .. so build from the git source instead:
  git_url: https://github.com/numpy/numpy
  git_tag: v{{ version }}
  patches:
    # patches for MKL based enhancements
    - 0001-intel_mkl-version.patch                                     # [blas_impl == 'mkl' and (not win or vc>=14)]
    - 0002-intel-use-mkl_fft.patch                                     # [blas_impl == 'mkl' and (not win or vc>=14)]
    - 0003-intel-distribution.patch                                    # [blas_impl == 'mkl' and (not win or vc>=14)]
    - 0004-intel-umath-optimizations.patch                             # [blas_impl == 'mkl' and (not win or vc>=14)]
    - 0005-intel-mkl_mem-all.patch                                     # [blas_impl == 'mkl' and (not win or vc>=14)]
    - 0006-intel-init_mkl.patch                                        # [blas_impl == 'mkl' and (not win or vc>=14)]
    - 0007-intel-mkl_random.patch                                      # [blas_impl == 'mkl' and (not win or vc>=14)]
    # patch up MKL patches
    - 0008-Remove-ICC-specific-flags.patch                             # [blas_impl == 'mkl' and (not win or vc>=14)]
    - 0009-Remove-np.invsqrt.patch                                     # [blas_impl == 'mkl' and (not win or vc>=14)]
    - 0010-Rewrite-inlining.patch                                      # [blas_impl == 'mkl' and (not win or vc>=14)]
    # patch sequence switched as it is easier to apply smaller patches than
    # larger ones to the changes above!
    - 0011-simplify-arch-flags.patch                                   # [osx]
    # customize gfortran executable that gets looked for to use our GFORTRAN env var
    - 0012-Obtain-and-prefer-custom-gfortran-from-env-var.patch
    # Seems to be an issue with case sensitivity and Windows filesystem permission errors.
    - 0013-fix-windows-case-sensitivity.patch                          # [win]
    - 0014-disable-memmap-filename-test-due-to-CI-link-confusio.patch  # [win]

build:
  number: 0
  skip: True  # [blas_impl == 'openblas' and win]

outputs:
  # this one has all the actual contents
  - name: numpy-base
    script: install_base.sh   # [unix]
    script: install_base.bat  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('fortran') }}
        # libgcc-ng should be a dependecy of libgfortran
        # until this is fixed add libgcc explicitly
        - libgcc-ng         # [linux and blas_impl == 'openblas']
      host:
        - cython
        - python
        - setuptools
        - mkl-devel  {{ mkl }}  # [blas_impl == 'mkl']
        - openblas-devel {{ openblas }}  # [blas_impl == 'openblas']
      run:
        - python
    test:
      downstreams:
        - numpy

  # devel exists mostly to add the run_exports info.
  - name: numpy-devel
    build:
      run_exports:
        - {{ pin_subpackage('numpy') }}
    requirements:
      host:
        - python
        - {{ pin_subpackage('numpy-base', exact=True) }}
        - mkl-devel  {{ mkl }}  # [blas_impl == 'mkl']
        - openblas-devel {{ openblas }}  # [blas_impl == 'openblas']
      run:
        - python
        - {{ pin_subpackage('numpy-base', exact=True) }}

  # metapackage for things that don't use numpy's C interface, or things
  - name: numpy
    requirements:
      build:
        # for runtime alignment
        - {{ compiler('c') }}
        - {{ compiler('fortran') }}
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('numpy-base') }}
        # openblas or mkl runtime included with run_exports
        - mkl_fft # [blas_impl == 'mkl']
        - mkl_random # [blas_impl == 'mkl' and (not win or vc>=14)]

    test:
      requires:
        - nose
        - {{ compiler('c') }}
        - {{ compiler('fortran') }}
        - nomkl  # [x86 and blas_impl != 'mkl']
      commands:
        - f2py -h
        - python -c "import numpy; numpy.show_config()"
        - conda inspect linkages -p $PREFIX numpy  # [not win]
        - conda inspect objects -p $PREFIX numpy  # [osx]
      imports:
        - numpy
        - numpy.linalg.lapack_lite

    about:
      home: http://numpy.scipy.org/
      license: BSD 3-Clause
      license_file: LICENSE.txt
      summary: 'Array processing for numbers, strings, records, and objects.'
      description: |
        NumPy is the fundamental package needed for scientific computing with Python.
      doc_url: https://docs.scipy.org/doc/numpy-1.14.0/reference/
      dev_url: https://github.com/numpy/numpy
      dev_source_url: https://github.com/numpy/numpy/tree/master/doc

extra:
  recipe-maintainers:
    - jakirkham
    - msarahan
    - pelson
    - rgommers
    - ocefpaf
