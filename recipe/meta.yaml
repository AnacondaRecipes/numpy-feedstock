{% set name = "numpy" %}
{% set version = "1.16.6" %}
{% set mkl_random_version = "1.2.1" %}
{% set mkl_random_buildnumber = 1 %}
# this is the latest version of mkl_fft I could find that supported numpy 1.16 through testing.
{% set mkl_fft_version = "1.2.1" %}
{% set mkl_fft_buildnumber = 1 %}

package:
  name: numpy_and_dev
  version: {{ version }}

source:
  - url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.zip
    sha256: e5cf3fdf13401885e8eea8170624ec96225e2174eb0c611c6f26dd33b489e3ff
    patches:
      - 0001-fix-windows-case-sensitivity.patch
      - 0002-simplify-arch-flags.patch
      - 0003-Obtain-and-prefer-custom-gfortran-from-env-variable.patch
      - 0004-disable-memmap-filename-test-due-to-CI-link-confusio.patch
      - 0005-disable-broken-tests.patch
      - 0017-mark-known-failing-tests-on-ppc64le.patch    # [ppc64le]
      {% if blas_impl == "mkl" and (not win or vc|int >= 14) -%}
      # patches for MKL based enhancements
      - 0006-use-mklfft-when-available.patch
      - 0007-define-mkl_version-in-__init__.py.patch
      - 0008-intel-umath-optimizations.patch
      - 0009-intel-mkl_mem-all.patch
      - 0010-intel-init_mkl.patch
      - 0011-intel-mkl_random.patch
      # patch up MKL patches
      - 0012-Remove-ICC-specific-flags.patch
      - 0013-Remove-np.invsqrt.patch
      - 0014-Rewrite-inlining.patch
      - 0015-Fixes-from-Intel-Distribution.patch
      - 0016-define-__THRESHOLD.patch
      - 0018-filter-out-warnings-when-importing-mkl_fft.patch
      {%- endif %}
      # test fails due to hard-coded floating point in pickled data.
      - 0019-xfail-floating-pickle-test-s390x.patch   # [s390x]
      # borrowing these from conda-forge to fix loss_of_precision & test_random
      - skip_test_loss_of_precision.diff  # [aarch64 or s390x]
      - backport_13558.patch
      # Unresolved issue around OpenBLAS:
      # https://github.com/numpy/numpy/pull/18943
      - 0020-disable-test-nan-openblas.patch  # [blas_impl == 'openblas' and (linux or osx)]
      # Reported here but never resolved?
      # https://github.com/numpy/numpy/issues/16046
      - 0021-disable-test-gcd-overflow-s390x.patch  # [s390x]

build:
  number: 5
  # Note: 1.16 was never built for osx-arm64
  skip: True  # [(blas_impl == 'openblas' and win) or py<36 or py>39 or (osx and arm64)]
  force_use_keys:
    - python

requirements:
  build:
    - patch  # [not win]
    - m2-patch  # [win]

outputs:
  # this one has all the actual contents
  - name: numpy-base
    script: install_base.sh   # [unix]
    script: install_base.bat  # [win]
    build:
      ignore_run_exports:
        - libgfortran5  # [osx]
      missing_dso_whitelist:
        - '$RPATH/ld64.so.1'  # [s390x]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("fortran") }}
      host:
        - python
        - pip
        - setuptools  # [not win]
        - setuptools <=51  # [win]
        - cython
        - mkl-devel  {{ mkl }}  # [blas_impl == "mkl"]
        - openblas-devel {{ openblas }}  # [blas_impl == "openblas"]
      run:
        - python
    {% if only_build_numpy_base != 'yes' %}
    test:
      commands:
        - test -e $SP_DIR/numpy/distutils/site.cfg     # [unix]
        - IF NOT EXIST %SP_DIR%\numpy\distutils\site.cfg exit 1  # [win]

  # devel exists mostly to add the run_exports info.
  - name: numpy-devel
    build:
      run_exports:
        - {{ pin_subpackage('numpy') }}
    requirements:
      host:
        - python
        # these import blas metapackages to ensure consistency with downstream libs that also use blas
        - mkl-devel  {{ mkl }}  # [blas_impl == 'mkl']
        - openblas-devel {{ openblas }}  # [blas_impl == 'openblas']
      run:
        - python
        - {{ pin_subpackage('numpy-base', exact=True) }}

  # metapackage for things that don't use numpy's C interface, or things
  - name: numpy
    requirements:
      build:
        # for runtime alignment
        - {{ compiler('c') }}
        - {{ compiler('fortran') }}
      host:
        - python
        # these import blas metapackages to ensure consistency with downstream libs that also use blas
        - mkl-devel  {{ mkl }}  # [blas_impl == 'mkl']
        - openblas-devel {{ openblas }}  # [blas_impl == 'openblas']
      run:
        - python
        - {{ pin_subpackage('numpy-base', exact=True) }}
        # openblas or mkl runtime included with run_exports
        - {{ pin_subpackage("mkl_fft") }}  # [blas_impl == 'mkl']
        - {{ pin_subpackage("mkl_random") }} # [blas_impl == 'mkl' and (not win or vc>=14)]
    {% endif %}

    test:
      script: numpy_test.py
      requires:
        - pytest
        - {{ compiler('c') }}
        - {{ compiler('fortran') }}
        - nomkl  # [x86 and blas_impl != 'mkl']
      commands:
        - f2py -h
        - python -c "import numpy; numpy.show_config()"
      imports:
        - numpy
        - numpy.linalg.lapack_lite
    about:
      home: https://numpy.org/
      license: BSD-3-Clause
      license_family: BSD
      license_file: LICENSE.txt
      summary: 'Array processing for numbers, strings, records, and objects.'
      description: |
        NumPy is the fundamental package needed for scientific computing with Python.
      doc_url: https://docs.scipy.org/doc/numpy-{{ version }}/reference/
      dev_url: https://github.com/numpy/numpy
      dev_source_url: https://github.com/numpy/numpy/tree/master/doc

extra:
  recipe-maintainers:
    - jakirkham
    - msarahan
    - pelson
    - rgommers
    - ocefpaf
