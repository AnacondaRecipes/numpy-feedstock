{% set version = "1.19.1" %}

package:
  name: numpy_base_and_dev
  version: {{ version }}

source:
  - url: https://pypi.io/packages/source/n/numpy/numpy-{{ version }}.zip
    sha256: b8456987b637232602ceb4d663cb34106f7eb780e247d51a260b84760fd8f491 
    patches:
      # patches in this if block are pulled in from https://github.com/IntelPython/numpy/tree/intel/1.17.0/conda-recipe/v1.17-patches
      {% if blas_impl == "mkl" -%}
      - 0001-intel_mkl-version.patch
      - 0003-intel_init_mkl.patch
      {%- endif %}
      - 0007-Obtain-and-prefer-custom-gfortran-from-env-variable.patch

build:
  number: 0
  skip: True  # [(blas_impl == 'openblas' and win) or py2k]
  force_use_keys:
    - python

outputs:
  # this one has all the actual contents
  - name: numpy-base
    script: install_base.sh   # [unix]
    script: install_base.bat  # [win]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("fortran") }}
        # HACK: need this for libquadmath.  Should fix the gcc package
        - libgcc-ng                  # [linux]
      host:
        - cython
        - python
        - setuptools
        - mkl-devel  {{ mkl }}  # [blas_impl == "mkl"]
        - openblas-devel {{ openblas }}  # [blas_impl == "openblas"]
      run:
        - python
    test:
      commands:
        - test -e $SP_DIR/numpy/distutils/site.cfg     # [unix]
        - IF NOT EXIST %SP_DIR%\numpy\distutils\site.cfg exit 1  # [win]

  # devel exists mostly to add the run_exports info.
  - name: numpy-devel
    build:
      run_exports:
        - {{ pin_subpackage('numpy-base') }}
    requirements:
      host:
        - python
        # these import blas metapackages to ensure consistency with downstream libs that also use blas
        - mkl-devel  {{ mkl }}  # [blas_impl == 'mkl']
        - openblas-devel {{ openblas }}  # [blas_impl == 'openblas']
      run:
        - python
        - {{ pin_subpackage('numpy-base', exact=True) }}

  # NOTE: "numpy" metapackage is defined in numpy-metapackage feedstock to avoid cycles
  - name: numpy
    requirements:
      build:
        # for runtime alignment
        - {{ compiler('c') }}
        - {{ compiler('fortran') }}
      host:
        - python
        # these import blas metapackages to ensure consistency with downstream libs that also use blas
        - mkl-devel  {{ mkl }}  # [blas_impl == 'mkl']
        - openblas-devel {{ openblas }}  # [blas_impl == 'openblas']
      run:
        - python
        - numpy-base  {{ numpy_version }}
        # openblas or mkl runtime included with run_exports
        - mkl_fft  # [blas_impl == 'mkl']
        - mkl_random # [blas_impl == 'mkl' and (not win or vc>=14)]
    test:
      requires:
        - pytest
        - hypothesis
        - {{ compiler('c') }}
        - {{ compiler('fortran') }}
        - nomkl  # [x86 and blas_impl != 'mkl']
      commands:
        - f2py -h
        - python -c "import numpy; numpy.show_config()"
        - pytest -v --pyargs numpy -k "not (test_loss_of_precision or test_einsum_sums_cfloat64)"  # [ppc64le]
        - pytest -v --pyargs numpy -k "not (test_loss_of_precision or test_may_share_memory_easy_fuzz or test_xerbla_override or test_may_share_memory_harder_fuzz or test_large_zip or test_sdot_bug_8577 or test_unary_ufunc_call_fuzz)"  # [aarch64]
        - pytest -v --pyargs numpy -k "not test_sincos_float32"  # [linux64]
        - export LDFLAGS="$LDFLAGS -undefined dynamic_lookup"   # [osx]
        - export CFLAGS="$CFLAGS -fno-lto"                      # [osx]
        - pytest -v --pyargs numpy  # [not (aarch64 or ppc64le or linux64)]
      imports:
        - numpy
        - numpy.linalg.lapack_lite

about:
  home: http://numpy.scipy.org/
  license: BSD 3-Clause
  license_file: LICENSE.txt
  summary: 'Array processing for numbers, strings, records, and objects.'
  description: |
    NumPy is the fundamental package needed for scientific computing with Python.
  doc_url: https://docs.scipy.org/doc/numpy-{{ version }}/reference/
  dev_url: https://github.com/numpy/numpy
  dev_source_url: https://github.com/numpy/numpy/tree/master/doc

extra:
  recipe-maintainers:
    - jakirkham
    - msarahan
    - pelson
    - rgommers
    - ocefpaf
